"""
@author
题目描述: 给定A,B,C三根足够长的细柱，在A柱上放有2n个中间有空的圆盘，共有n个不同的尺寸，每个尺寸都有两个相同的圆盘，
注意这两个圆盘是不加区分的(下图为n=3的情形）。现要将 这些圆盘移到C柱上，在移动过程中可放在B柱上暂存。要求:
(1)每次只能移动一个圆盘；
(2) A、B、C三根细柱上的圆盘都要保持上小下大的顺序；
任务:设An为2n个圆盘完成上述任务所需的最少移动次数，对于输入的n，输出An。
输入: 一个正整数n，表示在A柱上放有2n个圆盘。
输出: 一行，包含一个正整数，为完成上述任务所需的最少移动次数An。
样例输入
1
样例输出
2

"""
# 原理是将 A 上的(n-1) 块盘移动到B，然后A中剩下的，也是最大的一块盘移动到C，最后将B上（n-1）块盘移动到C。

An=0
m=int(input())
def Hanoi(n , a, b, c):
    if n==1:
        # print (" Hanoi Tower move", a, "-->", c)
        global An
        An+=2
        return
    Hanoi(n-1, a, c, b)
    Hanoi(1, a, b, c)
    Hanoi(n-1, b, a, c)
Hanoi(m, 'A', 'B', 'C')
print(An)
